{"version":3,"file":"static/js/54.9e9f88db.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactListElement.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"submitBtn\":\"ContactForm_submitBtn__lg06P\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    const foundContact = contacts.find(\n      contact => contact.name === newContact.name\n    );\n\n    if (foundContact) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else dispatch(addContact(newContact));\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\" className={css.formLabel}>\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.formInput}\n        id=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"phone\" className={css.formLabel}>\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        id=\"phone\"\n        className={css.formInput}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className={css.submitBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactListElement = ({ contact }) => {\n  const { name, phone, id } = contact;\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li id={id} className={css.listItem}>\n      {name}: {phone}{' '}\n      <button type=\"button\" className={css.btnDelete} onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListElement.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import css from './ContactList.module.css';\nimport { ContactListElement } from './ContactListElement';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contactsList = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {contactsList.map(contact => (\n        <ContactListElement key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { setFilter } from '../../redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <label className={css.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","evt","preventDefault","form","currentTarget","newContact","elements","value","number","find","alert","concat","addContact","reset","children","_jsx","htmlFor","type","id","title","required","ContactListElement","_ref","phone","onClick","deleteContact","ContactList","contactsList","map","Filter","onChange","target","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}